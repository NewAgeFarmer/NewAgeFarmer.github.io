(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{317:function(t,a,_){"use strict";_.r(a);var r=_(6),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"初识-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初识-html"}},[t._v("#")]),t._v(" 初识 HTML")]),t._v(" "),a("h2",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),a("p",[t._v("HTML的全称为Hyper Text Markup Language，即超文本标记语言，也就是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明文字，图形、动画、声音、表格、链接等。")]),t._v(" "),a("p",[t._v("超文本是一种组织信息的方式，它通过超级链接方法将文本中的文字、图表与其他信息媒体相关联。这些相互关联的信息媒体可能在同一文本中，也可能是其他文件，或是地理位置相距遥远的某台计算机上的文件。这种组织信息方式将分布在不同位置的信息资源用随机方式进行连接，为人们查找，检索信息提供方便。")]),t._v(" "),a("h2",{attrs:{id:"万维网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#万维网"}},[t._v("#")]),t._v(" 万维网")]),t._v(" "),a("p",[t._v("万维网（world wide web，简称www）上的一个超媒体文档称之为一个页面（外语：page）。作为一个组织或个人在万维网上放置开始点的页面称为主页（外语：Homepage）或首页，主页中通常包括有指向其他相关页面或其他节点的指针（超级链接），所谓超级链接，就是一种统一资源定位器（Uniform Resource Locator，外语缩写：URL）指针，通过激活（点击）它，可使浏览器方便地获取新的网页。这也是HTML获得广泛应用的最重要的原因之一。在逻辑上将视为一个整体的一系列页面的有机集合称为网站（Website或Site）。超文本标记语言（英文缩写：HTML）是为“网页创建和其它可在网页浏览器中看到的信息”设计的一种标记语言。")]),t._v(" "),a("p",[t._v("网页的本质就是超文本标记语言，通过结合使用其他的Web技术（如：脚本语言、公共网关接口、组件等），可以创造出功能强大的网页。因而，超文本标记语言是万维网（Web）编程的基础，也就是说万维网是建立在超文本基础之上的。")]),t._v(" "),a("h2",{attrs:{id:"历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#历史"}},[t._v("#")]),t._v(" 历史")]),t._v(" "),a("p",[t._v("HTML是由Web的发明者 Tim Berners-Lee和同事 Daniel W. Connolly于1990年创立的一种标记语言，它是标准通用化标记语言SGML的应用。用HTML编写的超文本文档称为HTML文档，它能独立于各种操作系统平台(如UNIX， Windows等)。使用HTML，将所需要表达的信息按某种规则写成HTML文件，通过专用的浏览器来识别，并将这些HTML文件“翻译”成可以识别的信息，即我们所见到的网页。")]),t._v(" "),a("p",[t._v("自1990年以来，HTML就一直被用作万维网的信息表示语言，使用HTML描述的文件需要通过web浏览器显示出效果。HTML是一种建立网页文件的语言，通过标记式的指令(Tag)，将影像、声音、图片、文字动画、影视等内容显示出来。事实上，每一个HTML文档都是一种静态的网页文件，这个文件里面包含了HTML指令代码，这些指令代码并不是一种程序语言，只是一种排版网页中资料显示位置的标记结构语言，易学易懂，非常简单。HTML的普遍应用就是带来了超文本的技术―通过单击鼠标从一个主题跳转到另一个主题，从一个页面跳转到另一个页面，与世界各地主机的文件链接超文本传输协议规定了浏览器在运行HTML文档时所遵循的规则和进行的操作。HTTP的制定使浏览器在运行超文本时有了统一的规则和标准。")]),t._v(" "),a("h2",{attrs:{id:"http协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" HTTP协议")]),t._v(" "),a("p",[t._v("在WWW的背后有一系列的协议和标准支持它完成如此宏大的工作，这就是Web协议族，其中就包括HTTP超文本传输协议。")]),t._v(" "),a("p",[t._v("超文本传输协议（Hyper Text Transfer Protocol，HTTP）是一个简单的请求-响应协议，它通常运行在 TCP 之上。它指定了客户端可能发送给服务器什么样的消息以及得到什么样的响应。请求和响应消息的头以 ASCII 形式给出；而消息内容则具有一个类似 MIME 的格式。这个简单模型是早期 Web成功的有功之臣，因为它使开发和部署非常地直截了当。")]),t._v(" "),a("p",[t._v("HTTP是基于B/S架构进行通信的，而HTTP的服务器端实现程序有httpd、nginx等，其客户端的实现程序主要是Web浏览器，例如Firefox、Internet Explorer、Google Chrome、Safari、Opera等，此外，客户端的命令行工具还有 elink、curl 等。Web服务是基于TCP的，因此为了能够随时响应客户端的请求，Web服务器需要监听在80/TCP端口。这样客户端浏览器和Web服务器之间就可以通过HTTP进行通信了。")]),t._v(" "),a("ul",[a("li",[t._v('一次HTTP事务由"HTTP请求"和"HTTP响应"构成')])]),t._v(" "),a("h2",{attrs:{id:"发展阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发展阶段"}},[t._v("#")]),t._v(" 发展阶段")]),t._v(" "),a("h3",{attrs:{id:"_0-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-9"}},[t._v("#")]),t._v(" 0.9")]),t._v(" "),a("p",[t._v("0.9协议是适用于各种数据信息的简洁快速协议，但是远不能满足日益发展的各种应用的需要。0.9协议就是一个交换信息的无序协议，仅仅限于文字。由于无法进行内容的协商，在双发的握手和协议中，并有规定双发的内容是什么，也就是图片是无法显示和处理的。")]),t._v(" "),a("h3",{attrs:{id:"_1-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0"}},[t._v("#")]),t._v(" 1.0")]),t._v(" "),a("p",[t._v("到了1.0协议阶段，也就是在1982年，Tim Berners-Lee提出了HTTP/1.0。在此后的不断丰富和发展中，HTTP/1.0成为最重要的面向事务的应用层协议。该协议对每一次请求/响应建立并拆除一次连接。其特点是简单、易于管理，所以它符合了大家的需要，得到了广泛的应用。")]),t._v(" "),a("h3",{attrs:{id:"_1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1"}},[t._v("#")]),t._v(" 1.1")]),t._v(" "),a("p",[t._v("在1.0协议中，双方规定了连接方式和连接类型，这已经极大扩展了HTTP的领域，但对于互联网最重要的速度和效率，并没有太多的考虑。毕竟，作为协议的制定者，当时也没有想到HTTP会有那么快的普及速度。")]),t._v(" "),a("p",[t._v("关于HTTP1.1协议的具体内容可以参考RFC 2616。")]),t._v(" "),a("h3",{attrs:{id:"_2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-0"}},[t._v("#")]),t._v(" 2.0")]),t._v(" "),a("p",[t._v("HTTP2.0的前身是HTTP1.0和HTTP1.1。虽然之前仅仅只有两个版本，但这两个版本所包含的协议规范之庞大，足以让任何一个有经验的工程师为之头疼。网络协议新版本并不会马上取代旧版本。实际上，1.0和1.1在之后很长的一段时间内一直并存，这是由于网络基础设施更新缓慢所决定的。")]),t._v(" "),a("p",[t._v("关于HTTP2.0协议的具体内容可以参考RFC 7540。")]),t._v(" "),a("h2",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("p",[t._v("HTTP诞生之初主要是应用于WEB端内容获取，那时候内容还不像现在这样丰富，排版也没那么精美，用户交互的场景几乎没有。对于这种简单的获取网页内容的场景，HTTP表现得还算不错。但随着互联网的发展和WEB2.0的诞生，更多的内容开始被展示（更多的图片文件），排版变得更精美（更多的CSS），更复杂的交互也被引入（更多的JS）。用户打开一个网站首页所加载的数据总量和请求的个数也在不断增加。")]),t._v(" "),a("p",[t._v("今天绝大部分的门户网站首页大小都会超过2M，请求数量可以多达100个。另一个广泛的应用是在移动互联网的客户端app，不同性质的app对HTTP的使用差异很大。对于电商类app，加载首页的请求也可能多达10多个。对于微信这类IM，HTTP请求可能仅限于语音和图片文件的下载，请求出现的频率并不算高。")]),t._v(" "),a("h2",{attrs:{id:"什么是前端、后端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是前端、后端"}},[t._v("#")]),t._v(" 什么是前端、后端?")]),t._v(" "),a("p",[t._v("软件一般按"),a("strong",[t._v("业务的使用者")]),t._v("对产品领域进行划分，例如网购软件的用户端、商家端，再例如滴滴的客户端和运营的后台；")]),t._v(" "),a("p",[t._v("当然，也可能按照"),a("strong",[t._v("业务模块")]),t._v("进行划分，例如物流系统、支付系统、订单系统等。")]),t._v(" "),a("p",[t._v("前端就是负责“用户看得见”的内容，将 UI 稿转换成网页、APP、电脑软件等，还需要实现所有交互事件，例如用户点击、滑动、拖动等操作；")]),t._v(" "),a("p",[t._v("后端则负责设计软件的架构，与数据库的交互（数据存取），优化网页的性能等业务逻辑。")]),t._v(" "),a("p",[t._v("页面的数据在后端处理后，实时更新并发送给浏览器，然后前端获取后端的数据并渲染到页面；")]),t._v(" "),a("p",[t._v("浏览器上会执行HTML CSS JS.使用获得的数据，编写样式逻辑让页面呈现出漂亮的界面和丰富的交互。")])])}),[],!1,null,null,null);a.default=e.exports}}]);